# Copyright 2022 Giuseppe De Palma, Matteo Trentin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.2
info:
  title: FunLess Platfom API
  description: The API for the FunLess Platform
  version: "0.5"
  license:
    name: Apache 2.0
servers:
  - url: http://localhost:4000
    description: The dev server for the FunLess API
tags:
  - name: modules
  - name: functions

components:
  parameters:
    $ref: "./parameters/_index.yaml"
  responses:
    $ref: "./responses/_index.yaml"
  schemas:
    $ref: "./schemas/_index.yaml"

paths:
  /v1/fn:
    # GET /fn
    get:
      summary: List modules
      operationId: list_modules
      description: List all modules
      tags:
        - modules
      responses:
        "200":
          description: An array of modules
          headers:
            X-Total-Count:
              description: Total number of modules
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "schemas/module_names_result.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # POST /fn
    post:
      summary: Create
      operationId: create_module
      description: Create a new module
      tags:
        - modules
      requestBody:
        description: Module to create
        required: true
        content:
          application/json:
            schema:
              $ref: "schemas/module_name.yaml"
      responses:
        "201":
          $ref: "responses/null_response.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

  /v1/fn/{module_name}:
    # GET /fn/{mod}
    get:
      summary: Show module info
      operationId: show_module_by_name
      description: Get module data (name, array of functions, number of functions)
      tags:
        - modules
      parameters:
        - $ref: "parameters/path/module_name.yaml"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "schemas/single_module_result.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # POST /fn/{mod}
    post:
      summary: Create new function
      operationId: create_function
      description: Create a new function in the specified module
      tags:
        - functions
      parameters:
        - $ref: "parameters/path/module_name.yaml"
      requestBody:
        description: Object containing the function's name and code
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "schemas/function_create_update.yaml"
            encoding:
              code:
                contentType: application/octet-stream
      responses:
        "201":
          $ref: "responses/null_response.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # PUT /fn/{mod}
    put:
      summary: Update module name
      operationId: update_module
      description: Update module name
      tags:
        - modules
      parameters:
        - $ref: "parameters/path/module_name.yaml"
      requestBody:
        description: New module name to use
        required: true
        content:
          application/json:
            schema:
              $ref: "schemas/module_name.yaml"
      responses:
        "200":
          $ref: "responses/null_response.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # DELETE /fn/{mod}
    delete:
      summary: Delete module
      operationId: delete_module
      description: Delete module
      tags:
        - modules
      parameters:
        - $ref: "parameters/path/module_name.yaml"
      responses:
        "204":
          $ref: "responses/null_response.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

  /v1/fn/{module_name}/{function_name}:
    # GET /fn/{mod}/{fun}
    get:
      summary: Show function info
      operationId: show_function_by_name
      description: Get function data (name, module name, size of code)
      tags:
        - functions
      parameters:
        - $ref: "parameters/path/module_name.yaml"
        - $ref: "parameters/path/function_name.yaml"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "schemas/single_function_result.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # PUT /fn/{mod}/{fun}
    put:
      summary: Update function code
      operationId: update_function
      description: Update function code
      tags:
        - functions
      parameters:
        - name: module_name
          in: path
          required: true
          description: The name of the module
          schema:
            type: string
        - name: function_name
          in: path
          required: true
          description: The name of the function
          schema:
            type: string
      requestBody:
        description: New function code to use
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "schemas/function_create_update.yaml"
            encoding:
              code:
                contentType: application/octet-stream
      responses:
        "200":
          $ref: "responses/null_response.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # DELETE /fn/{mod}/{fun}
    delete:
      summary: Delete function
      operationId: delete_function
      description: Delete single function in module
      tags:
        - functions
      parameters:
        - name: module_name
          in: path
          required: true
          description: The name of the module
          schema:
            type: string
        - name: function_name
          in: path
          required: true
          description: The name of the function
          schema:
            type: string
      responses:
        "200":
          $ref: "responses/null_response.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"

    # POST /fn/{mod}/{fun}/invoke
    post:
      summary: Invoke function
      operationId: invoke_function
      description: Invoke function
      tags:
        - functions
      parameters:
        - name: module_name
          in: path
          required: true
          description: The name of the module
          schema:
            type: string
        - name: function_name
          in: path
          required: true
          description: The name of the function
          schema:
            type: string
      requestBody:
        description: Function input
        required: true
        content:
          application/json:
            schema:
              $ref: "schemas/invoke_input.yaml"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "schemas/invoke_result.yaml"
        default:
          $ref: "responses/unexpected_error.yaml"
